<?php

namespace %stub.namespace%;

use Illuminate\Http\Request;

use App\%stub.ucSingle%;
use App\Http\Requests;
use App\Http\Controllers\Controller;

class %stub.class% extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        return view('%stub.lcPlural%.index')->with('%stub.lcPlural%', %stub.lcSingle%::all());
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('%stub.lcPlural%.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  %stub.ucSingle%Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(%stub.ucSingle%Request $request)
    {
        %stub.ucSingle%::create([
            'title' => $request->title,
            'text' => $request->text,
        ]);

        return back()->with('status', '%stub.lcSingle% created successfully!');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        return view('%stub.lcPlural%.show')->with('%stub.lcSingle%', %stub.ucSingle%::findOrFail($id));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $resource = %stub.ucSingle%::findOrFail($id);

        $this->authorize($resource);
        
        return view('%stub.lcPlural%.edit')->with('%stub.lcSingle%', $resource);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  %stub.ucSingle%Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(%stub.ucSingle%Request $request, $id)
    {
        $resource = %stub.ucSingle%::findOrFail($id);

        $this->authorize($resource);

        $resource->title = $request->title;
        $resource->text = $request->text;
        $resource->save();

        return back()->with('status', '%stub.ucSingle% edited successfully!');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $resource = %stub.ucSingle%::findOrFail($id);

        $this->authorize($resource);

        $resource->delete();

        return view('%stub.lcPlural%.index')->with('status', '%stub.ucSingle% deleted successfully!');
    }
}